vagrantを使ったLAMP環境をローカルに作る手順① ~Vagrantfileを作成しよう！~
開発環境の構築について

初心者にとって開発環境の構築はプログラミングを挫折する大きな壁になります。
その壁を乗り越えるべく
今回から３つの記事でPC内でPHPやmysqlを使ってアプリを作成するために必要なLAMP環境をつくる手順をまとめました。
vagrantを使ったLAMP環境をローカルに作る手順②
vagrantを使ったLAMP環境をローカルに作る手順③
ここまで完了したらphpとmysqlを使いこなすための環境を構築できます。
また、Wifi環境にもよりますが、3記事を通じて環境を開発するには、
２時間はかかってしまいます。
時間に余裕があるときに作業するのがオススメですが、３記事に分けていますので
時間に限りがある方は１記事づつ進めていただければと思います。
なおダウンロードのフェーズは特に時間がかかるので、時間とWifi環境に
余裕をもって取りかかることをオススメします。
LAMP環境とはPHPとmysqlを使ってローカルで開発する環境のことです。
私が使用している使用しているPCはMacなのでWindowsで構築する場合は別途確認する必要がありそうです。
なおrubyをはじめその他サーバー側の言語で開発する環境をつくる場合も別途確認が必要です。
必要なツールのダウンロード

まずは自分のPC内で環境構築するのに必要なアプ　リケーションをダウンロードします。
vagrant
スクリーンショット 2015-10-17 17.52.34.png
virtualbox
virtual_box.jpeg
ファイル転送ツールもダウンロードしましょう。
FileZilla
filezilla.png
これで準備完了です！
ダウンロードしたファイルはDownloadsに入れておきましょう。
vagrantファイルを作成

vagrantにBoxファイルを登録

まずはMacのターミナル、またはi-Term2を開きます。
基本的な操作はUNIXコマンドを使って操作します。
まずはcdコマンドをつかって
cd Downloads
と入力しましょう。
入力が完了したら
pwd
と入力して無事場所にたどり着いたかを確認してみましょう。
/Users/PC名/Downloads
このように表示されれば無事たどり着けています。
無事Downloadsにたどりつけましたら
vagrant box add centos65 centos65­x86_64­20140116.box
と入力してvagrantにBoxファイルの登録をしましょう。
vagrantファイルの作成

ファイルの作成箇所はわかりやすいようにはじめはデスクトップに用意するのがオススメです。
cd Desktop            // Desktopディレクトリに移動
mkdir virtual_box      // Desktopにvirtual_boxディレクトリを作成
cd virtual_box          // 作成したvirtual_boxディレクトリに移動
mkdir 001_centos65     // viutual_box内に001_centos65ディレクトリ作成
cd 001_centos65　      // 001_centos65に移動
vagrant init centos65　// 001_centos65内にvagrantfileをインストール
ここまでできた状態でファインダーを確認するとデスクトップあるvirtualboxファイルの中の
001_centos65というファイルのなかにVagrantfileが作成されているはずです！
vagrantファイルをエディタで編集

vagrantファイルをエディタで編集し各種インストールの準備を進めましょう。
今回はvimというターミナルに内蔵されているテキストエディタを使います。
まずは
vim Vagrantfile
とターミナルに打ち込みます。
このままでは分かりづらいので
:set number
と打ち込み、行番号を振り当てましょう。
vimは入力に3つのモードがあるので上記リンクからで入力の方法をあらかじめ確認しておくと良いと思います。
vimの使い方がわからない！
という方はひとまず、自分の持っているテキストエディタでVagrantfileを開いて編集することもできます。
①29行目の#を消す
②46行目の#を消す
③52行目の#を消す
④51行目を改行、タブキーでスペースをあけ、
vb.customize ["modifyvm", :id, "--memory", "1024"]
を記入
vim　Vagrantfile編集後2015-10-10 18.33.56.png
このように変更できたら
:wqで保存してvimから抜け出しましょう。
ご自身のエディタを使った方は保存して終了すればOKです！
vagrantの起動

ここまで無事完了したら、
vagrant upでvagrantを立ち上げ、
vagrant sshでvagrantファイルの中に入り実際に
必要なツールをインストールしていきましょう!
vagrant  ssh完了2015-10-10 18.30.44.png
この画面のようにsshが成功したら
次のvagrantを使ったLAMP環境をローカルに作る手順②
で実際に開発環境の構築に必要なインストールの準備をしていきましょう！
